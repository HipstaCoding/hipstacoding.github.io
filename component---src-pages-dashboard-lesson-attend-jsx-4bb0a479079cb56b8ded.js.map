{"version":3,"sources":["webpack:///./src/pages/dashboard/lesson/attend.jsx"],"names":["ATTEND_TYPES","label","value","placeholder","ATTEND_TIME","BackLink","styled","Link","theme","colors","textColor","textSecondaryColor","PageTitle","h1","withFirebaseProvider","location","DEFAULT_ATTEND_TYPE","useState","type","currentAttendTime","setTime","Date","date","setDate","useFunctions","useEffect","queryParams","URLSearchParams","search","substring","get","to","DASHBOARD_SCHEDULE","color","size","format","locale","ru"],"mappings":"2QAoBMA,G,UAAe,CACnB,CACEC,MAAO,wBACPC,MAPqB,YAQrBC,YACE,iEAEJ,CACEF,MAAO,uBACPC,MAZoB,WAapBC,YACE,4EAEJ,CACEF,MAAO,qBACPC,MAjBwB,eAkBxBC,YACE,mTAOAC,IAAW,gBACK,CAAC,CAAEF,MAHP,KAGyBD,MAAO,eADjC,WAEI,CAAC,CAAEC,MALX,KAKwBD,MAAO,UAF3B,eAGQ,CACrB,CAAEC,MANY,KAMMD,MAAO,cAC3B,CAAEC,MARO,KAQMD,MAAO,UALT,GASXI,EAAWC,kBAAOC,QAAV,mEAAGD,CAAH,iNACH,qBAAGE,MAAkBC,OAAOC,aAkB3B,qBAAGF,MAAkBC,OAAOE,sBAC1B,qBAAGH,MAAkBC,OAAOE,sBAIpCC,EAAYN,UAAOO,GAAV,oEAAGP,CAAH,qBAIDA,UAAOL,MAAV,gEAAGK,CAAH,wCA6DIQ,uBAxDU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACpBC,EAAsBhB,EAAa,GADA,EAEjBiB,mBAASD,GAA1BE,EAFkC,KAGnCC,GAHmC,KAGff,EAAYc,EAAKhB,QAHF,EAIjBe,mBAASE,EAAkB,IAAtCC,GAJ4B,aAKjBH,mBAAS,IAAII,MAA9BC,EALkC,KAK5BC,EAL4B,OAMXN,mBAAS,MANE,UAOvBO,cAElBC,qBAAU,WACR,IAAMC,EAAc,IAAIC,gBAAgBZ,EAASa,OAAOC,UAAU,IAElEN,EAAQ,IAAIF,KAAKK,EAAYI,IAAI,YAChC,IAEHL,qBAAU,WACRL,EAAQD,EAAkB,MACzB,CAACD,IAwBJ,OACE,eAAC,IAAD,WACE,eAACb,EAAD,CAAU0B,GAAIC,IAAd,UACE,cAAC,IAAD,CAAcC,MAAM,UAAUC,KAAK,WADrC,8BAGA,eAACtB,EAAD,uBACY,IACTU,EAAOa,YAAOb,EAAM,sBAAuB,CAAEc,OAAQC,OAAQ,QAEhE","file":"component---src-pages-dashboard-lesson-attend-jsx-4bb0a479079cb56b8ded.js","sourcesContent":["import DashboardLayout from \"components/layouts/DashboardLayout\";\nimport { useEffect, useState } from \"react\";\nimport { navigate, Link } from \"gatsby\";\nimport { format } from \"date-fns\";\nimport { ru } from \"date-fns/locale\";\nimport { LinkPrevious } from \"grommet-icons\";\nimport { DASHBOARD_SCHEDULE } from \"src/routes\";\nimport styled from \"styled-components\";\nimport { Select, Grid, Box, TextArea, Button } from \"grommet\";\nimport { Container } from \"components/common/Container\";\nimport {\n  useFunctions,\n  withFirebaseProvider,\n} from \"components/FirebaseProvider\";\nimport to from \"await-to-js\";\n\nconst ATTEND_INTERVIEW = \"interview\";\nconst ATTEND_PRACTICE = \"practice\";\nconst ATTEND_CONSULTATION = \"consultation\";\n\nconst ATTEND_TYPES = [\n  {\n    label: \"[FRONT-END] Interview\",\n    value: ATTEND_INTERVIEW,\n    placeholder:\n      \"Привет, напиши сюда свои контактные данные и пару слов о себе\",\n  },\n  {\n    label: \"[FRONT-END] Практика\",\n    value: ATTEND_PRACTICE,\n    placeholder:\n      \"Добро пожаловать, снова! Напиши сюда свои вопросы по интересующему уроку\",\n  },\n  {\n    label: \"[ANY] Консультация\",\n    value: ATTEND_CONSULTATION,\n    placeholder:\n      \"Привет, чужестранник! Я могу проконсультировать тебя по HTML, JS, react и node.js. А так же по backend сервисам google, stripe, twilio и тд. Еще активно занимаюсь видеозаписью и живыми трансляциями. Интересуют любые предложения по сотрудничеству и активно ищу преподователей для Hipsta Conding School.\",\n  },\n];\n\nconst HOUR = 1 * 60 * 60 * 1000;\nconst HALF_HOUR = 30 * 60 * 1000;\n\nconst ATTEND_TIME = {\n  [ATTEND_INTERVIEW]: [{ value: HALF_HOUR, label: \"пол часика\" }],\n  [ATTEND_PRACTICE]: [{ value: HOUR, label: \"часик\" }],\n  [ATTEND_CONSULTATION]: [\n    { value: HALF_HOUR, label: \"пол часика\" },\n    { value: HOUR, label: \"часик\" },\n  ],\n};\n\nconst BackLink = styled(Link)`\n  color: ${({ theme }) => theme.colors.textColor};\n  opacity: 0.3;\n  transition: all 0.3s;\n  display: flex;\n  align-items: center;\n  font-size: 20px;\n  margin-bottom: 10px;\n\n  &:hover {\n    opacity: 1;\n  }\n\n  svg {\n    transition: all 0.3s;\n    margin-right: 10px;\n  }\n\n  &:hover svg {\n    fill: ${({ theme }) => theme.colors.textSecondaryColor};\n    stroke: ${({ theme }) => theme.colors.textSecondaryColor};\n  }\n`;\n\nconst PageTitle = styled.h1`\n  font-size: 36px;\n`;\n\nconst Label = styled.label`\n  font-size: 28px;\n  margin-bottom: 20px;\n`;\n\nconst LessonCreatePage = ({ location }) => {\n  const DEFAULT_ATTEND_TYPE = ATTEND_TYPES[0];\n  const [type, setType] = useState(DEFAULT_ATTEND_TYPE);\n  const currentAttendTime = ATTEND_TIME[type.value];\n  const [time, setTime] = useState(currentAttendTime[0]);\n  const [date, setDate] = useState(new Date());\n  const [details, setDetails] = useState(null);\n  const functions = useFunctions();\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search.substring(1));\n\n    setDate(new Date(queryParams.get(\"date\")));\n  }, []);\n\n  useEffect(() => {\n    setTime(currentAttendTime[0]);\n  }, [type]);\n\n  const createEvent = async e => {\n    const takeLessonFirebaseFn = functions.httpsCallable(\"takeLesson\");\n    const [err] = await to(\n      takeLessonFirebaseFn({\n        eventName: type.label,\n        description: details,\n        startTime: date.toISOString(),\n      })\n    );\n\n    if (err) {\n      return console.error(err);\n    }\n\n    navigate(DASHBOARD_SCHEDULE);\n  };\n\n  const onSubmit = e => {\n    e.preventDefault();\n    createEvent();\n  };\n\n  return (\n    <Container>\n      <BackLink to={DASHBOARD_SCHEDULE}>\n        <LinkPrevious color=\"light-1\" size=\"medium\" /> Вернуться к выбору даты\n      </BackLink>\n      <PageTitle>\n        Запись на{\" \"}\n        {date ? format(date, \"cccc, dd MMMM HH:mm\", { locale: ru }) : null}\n      </PageTitle>\n      <br />\n      \n    </Container>\n  );\n};\n\nexport default withFirebaseProvider(LessonCreatePage);\n"],"sourceRoot":""}